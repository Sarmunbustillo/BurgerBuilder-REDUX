{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\SARMUN\\\\Desktop\\\\projects\\\\Burger Builder\\\\BurgerBuilder-REDUX\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\SARMUN\\\\Desktop\\\\projects\\\\Burger Builder\\\\BurgerBuilder-REDUX\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxilary/Auxilary';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport axios from '../../axios-orders';\nimport OrderSummary from \"../../Components/Burger/OrderSummary/OrderSumary\";\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\nexport class BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    };\n\n    this.purchaseHandler = () => {\n      if (this.props.isAuthenticated) {\n        this.setState({\n          purchasing: true\n        });\n      } else {\n        this.props.onSetAuthRedirectPath('/checkout');\n        this.props.history.push('/auth');\n      }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchased();\n      this.props.history.push('/checkout');\n    };\n  }\n\n  //fetch ingredients from database\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  render() {\n    const disableInfo = _objectSpread({}, this.props.ings);\n\n    for (let key in disableInfo) {\n      //returns true or false {salad: true, meat: false}\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    ;\n    let orderSummary = null;\n    let burger = this.props.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Ingredients can't be loaded\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientsRemoved: this.props.onIngredientRemoved,\n        disabled: disableInfo,\n        purchaseable: this.updatePurchaseState(this.props.ings),\n        ordered: this.purchaseHandler,\n        isAuth: this.props.isAuthenticated,\n        price: this.props.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.props.price,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    }\n\n    ;\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n;\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchased: () => dispatch(actions.purchasedInit()),\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["C:/Users/SARMUN/Desktop/projects/Burger Builder/BurgerBuilder-REDUX/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","axios","OrderSummary","withErrorHandler","Spinner","actions","connect","BurgerBuilder","state","purchasing","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","purchaseHandler","props","isAuthenticated","setState","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchased","componentDidMount","onInitIngredients","render","disableInfo","ings","key","orderSummary","burger","error","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","burgerBuilder","totalPrice","auth","token","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients","purchasedInit","path","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport Burger from '../../Components/Burger/Burger';\r\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\r\nimport Modal  from '../../Components/UI/Modal/Modal';\r\nimport axios from '../../axios-orders';\r\nimport OrderSummary from \"../../Components/Burger/OrderSummary/OrderSumary\";\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport * as actions from  '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nexport class BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state ={...}\r\n    // }\r\n    state = {\r\n        purchasing: false       \r\n    };\r\n    //fetch ingredients from database\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n        .map(igKey => {\r\n            return ingredients[igKey];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        return sum > 0;\r\n    };\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({purchasing: true});\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    };\r\n\r\n    purchaseCancelHandler = ()=>  {\r\n        this.setState({purchasing: false});\r\n    };\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchased();\r\n        this.props.history.push('/checkout');\r\n    };\r\n\r\n    render() {\r\n        const  disableInfo ={\r\n            ...this.props.ings\r\n        };\r\n\r\n        for (let key in disableInfo) {\r\n            //returns true or false {salad: true, meat: false}\r\n            disableInfo[key] = disableInfo[key] <= 0;\r\n        };\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner /> ;\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientsRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disableInfo}\r\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        price={this.props.price}\r\n                    />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n            />\r\n        };\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                   {orderSummary}\r\n                </Modal>\r\n               {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated : state.auth.token !== null\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchased: () => dispatch(actions.purchasedInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));"]},"metadata":{},"sourceType":"module"}