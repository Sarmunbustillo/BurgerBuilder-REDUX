{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nconst purchaseBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    //concat returns a new objects as well\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst fetchOrdersStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nconst fetchOrdersFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrdersFail(state, action);\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/SARMUN/Desktop/projects/Burger Builder/BurgerBuilder-REDUX/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseInit","state","action","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","reducer","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAOP,YAAY,CAACM,KAAD,EAAQ;AAAEF,IAAAA,SAAS,EAAE;AAAb,GAAR,CAAnB;AACH,CAFD;;AAIA,MAAMI,mBAAmB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOP,YAAY,CAACM,KAAD,EAAQ;AAAEH,IAAAA,OAAO,EAAE;AAAX,GAAR,CAAnB;AACH,CAFD;;AAIA,MAAMM,qBAAqB,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAMG,QAAQ,GAAGV,YAAY,CAACO,MAAM,CAACI,SAAR,EAAmB;AAAEC,IAAAA,EAAE,EAAEL,MAAM,CAACM;AAAb,GAAnB,CAA7B;AACA,SAAOb,YAAY,CAACM,KAAD,EAAQ;AACvBH,IAAAA,OAAO,EAAE,KADc;AAEvBC,IAAAA,SAAS,EAAE,IAFY;AAGvB;AACAF,IAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaY,MAAb,CAAoBJ,QAApB;AAJe,GAAR,CAAnB;AAMH,CARD;;AAUA,MAAMK,kBAAkB,GAAG,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAOP,YAAY,CAACM,KAAD,EAAQ;AAAEH,IAAAA,OAAO,EAAE;AAAX,GAAR,CAAnB;AACH,CAFD;;AAIA,MAAMa,gBAAgB,GAAG,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACxC,SAAOP,YAAY,CAACM,KAAD,EAAQ;AAAEH,IAAAA,OAAO,EAAE;AAAX,GAAR,CAAnB;AACH,CAFD;;AAIA,MAAMc,kBAAkB,GAAG,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAOP,YAAY,CAACM,KAAD,EAAQ;AAAEJ,IAAAA,MAAM,EAAEK,MAAM,CAACL,MAAjB;AAAyBC,IAAAA,OAAO,EAAE;AAAlC,GAAR,CAAnB;AACH,CAFD;;AAIA,MAAMe,eAAe,GAAG,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AACvC,SAAOP,YAAY,CAACM,KAAD,EAAQ;AAAEH,IAAAA,OAAO,EAAE;AAAX,GAAR,CAAnB;AACH,CAFD;;AAKA,MAAMgB,OAAO,GAAG,CAACb,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACa,IAAf;AACI,SAAKrB,WAAW,CAACsB,aAAjB;AACI,aAAOhB,YAAY,CAACC,KAAD,EAAQC,MAAR,CAAnB;;AAEJ,SAAKR,WAAW,CAACuB,qBAAjB;AACI,aAAOd,mBAAmB,CAACF,KAAD,EAAQC,MAAR,CAA1B;;AAEJ,SAAKR,WAAW,CAACwB,uBAAjB;AACI,aAAOd,qBAAqB,CAACH,KAAD,EAAQC,MAAR,CAA5B;;AAEJ,SAAKR,WAAW,CAACyB,oBAAjB;AACI,aAAOT,kBAAkB,CAACT,KAAD,EAAQC,MAAR,CAAzB;;AAEJ,SAAKR,WAAW,CAAC0B,kBAAjB;AACI,aAAOT,gBAAgB,CAACV,KAAD,EAAQC,MAAR,CAAvB;;AAEJ,SAAKR,WAAW,CAAC2B,oBAAjB;AACI,aAAOT,kBAAkB,CAACX,KAAD,EAAQC,MAAR,CAAzB;;AAEJ,SAAKR,WAAW,CAAC4B,iBAAjB;AACI,aAAOT,eAAe,CAACZ,KAAD,EAAQC,MAAR,CAAtB;;AAEJ;AACI,aAAOD,KAAP;AAvBR;;AAwBK;AACR,CA1BD;;AA4BA,eAAea,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId })\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        //concat returns a new objects as well\r\n        orders: state.orders.concat(newOrder)\r\n    });                 \r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false });           \r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true });           \r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, { orders: action.orders, loading: false });           \r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, { loading: false });           \r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state, action);\r\n            \r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return purchaseBurgerStart(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purchaseBurgerSuccess(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return purchaseBurgerFail(state, action);\r\n        \r\n        case actionTypes.FETCH_ORDERS_START: \r\n            return fetchOrdersStart(state, action)\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return fetchOrdersSuccess(state, action)\r\n        \r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrdersFail(state, action)\r\n\r\n        default:\r\n            return state;\r\n        };\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}