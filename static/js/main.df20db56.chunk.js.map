{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Auxilary/Auxilary.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js","Components/Burger/BurgerIngredients/BurgerIngredients.module.css","axios-orders.js","Components/Navigation/SideDrawer/SideDrawer.module.css","Components/Burger/BuildControls/BuildControl/BuildControl.module.css","Components/UI/Backdrop/Backdrop.js","Components/UI/Modal/Modal.js","Components/Navigation/Toolbar/Toolbar.module.css","Components/UI/Button/Button.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","Components/Burger/BuildControls/BuildControls.module.css","Components/UI/Button/Button.module.css","Components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","Components/Burger/BurgerIngredients/BurgerIngredients.js","Components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","Components/Logo/Logo.module.css","Components/Navigation/NavigationItems/NavigationItems.module.css","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/Burger/Burger.module.css","Components/UI/Modal/Modal.module.css","Components/UI/Spinner/Spinner.module.css","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationsItems.js","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Components/Navigation/Toolbar/Toolbar.js","Components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/Burger/OrderSummary/OrderSumary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponents.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","oderData","orderId","purchaseBurgerfail","purchasedInit","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","push","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignUP","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instace","create","baseURL","backdrop","show","className","classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","Button","disabled","btnType","join","Spinner","Loader","withErrorHandler","WrappedComponent","state","errorComfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","Burger","Logo","height","src","burgerLogo","alt","NavigationItem","to","link","exact","activeClassName","active","NavigationsItems","NavigationItems","isAuthenticated","DrawerToggle","Toolbar","DrawerToggleClicked","DekstopOnly","isAuth","SideDrawer","attachClasses","Close","open","Open","closed","Layout","showSideDrawer","SideDrawerClosedHandler","toggleSideDrawerHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Lesss","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientsRemoved","OrderButton","purchaseable","ordered","OrderSumary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","updatePurchaseState","sum","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchased","onInitIngredients","disableInfo","ings","orderSummary","onIngredientAdded","onIngredientRemoved","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","asyncComponent","importComponent","cmp","component","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignIn","routes","withRouter","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","purchaseInit","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df20db56.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'URCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS ';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH' ;","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) =>  {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n\r\n    }\r\n}; \r\n\r\nexport const removeIngredient = (name) =>  {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n\r\n    }\r\n}; \r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFaiLed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-dylans-burger.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n               dispatch(setIngredients(response.data))\r\n            })\r\n            .catch(error => {\r\n               dispatch(fetchIngredientsFaiLed())\r\n            });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, oderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: oderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerfail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return  dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {                \r\n                //console.log(response.data)\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n               dispatch(purchaseBurgerfail(error))\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchasedInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('./orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    //to not lose the id name given by firebase push an object\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignUP) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDGEr5QgOLSKxpQNMuM8q_Zv7KeUuPlm0Q';\r\n        if(!isSignUP) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDGEr5QgOLSKxpQNMuM8q_Zv7KeUuPlm0Q';\r\n        };\r\n        axios.post(url, authData)\r\n        .then(response => {\r\n            //console.log(response);\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId', response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn))\r\n        })\r\n        .catch(err => {\r\n           // console.log(err);\r\n            dispatch(authFail(err.response.data.error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const  setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }\r\n        }\r\n    };\r\n};","export {\r\n    addIngredient,\r\n    removeIngredient,\r\n    initIngredients\r\n} from './burgerBuilder';\r\n\r\nexport { \r\n    purchaseBurger,\r\n    purchasedInit,\r\n    fetchOrders\r\n} from './order';\r\n\r\nexport {\r\n    auth,\r\n    logout,\r\n    setAuthRedirectPath,\r\n    authCheckState\r\n} from './auth'","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__Wz5CQ\",\"BreadTop\":\"BurgerIngredients_BreadTop__3dy1i\",\"Seeds1\":\"BurgerIngredients_Seeds1__1KskB\",\"Seeds2\":\"BurgerIngredients_Seeds2__3ALk3\",\"Meat\":\"BurgerIngredients_Meat__Xw0K6\",\"Cheese\":\"BurgerIngredients_Cheese__1y93Q\",\"Salad\":\"BurgerIngredients_Salad__13K2s\",\"Bacon\":\"BurgerIngredients_Bacon__2I2nP\"};","import axios from 'axios';\r\n\r\n\r\nconst instace = axios.create({\r\n    baseURL: 'https://react-dylans-burger.firebaseio.com/'\r\n});\r\n\r\nexport default instace;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__20xMQ\",\"Open\":\"SideDrawer_Open__1l7j3\",\"Close\":\"SideDrawer_Close__2u3w9\",\"Logo\":\"SideDrawer_Logo__p9313\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__FJV2B\",\"Label\":\"BuildControl_Label__2VWo0\",\"Less\":\"BuildControl_Less__zU5Np\",\"More\":\"BuildControl_More__1gl7G\"};","import React from 'react'\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n    return props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null      \r\n    \r\n}\r\n\r\nexport default backdrop\r\n","import React, {Component} from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxilary/Auxilary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    //in order to optimize the page. by not rendering the modal in the background.\r\n    //only  when is displayed or rendered\r\n    //even tho this is fro the ordersummary component the should update is manage in the wrapper component\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        //returns true if the condition is met\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;      \r\n    }   \r\n\r\n    render() {\r\n        return(\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}\r\n                    >{this.props.children}  \r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Modal\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__WN17R\",\"Logo\":\"Toolbar_Logo__1Wy_w\",\"DekstopOnly\":\"Toolbar_DekstopOnly__3N15h\"};","import React from 'react';\r\nimport classes from'./Button.module.css';\r\n\r\nconst Button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}\r\n    </button>\r\n);\r\n\r\nexport default Button\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__Ikp6P\",\"active\":\"NavigationItem_active__2LkG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__19mz4\",\"OrderButton\":\"BuildControls_OrderButton__3Zo4o\",\"enable\":\"BuildControls_enable__1o2dc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1wD8N\",\"Success\":\"Button_Success__3HP74\",\"Danger\":\"Button_Danger__3vDJY\"};","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\n\r\nexport default Spinner;\r\n","import React, {Component} from 'react';\r\n\r\nimport Aux from '../Auxilary/Auxilary';\r\nimport Modal from '../../Components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return  class extends Component { \r\n        state ={\r\n            error: null\r\n        };\r\n\r\n        constructor() {\r\n            super()            \r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        };\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        };\r\n\r\n        errorComfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error}\r\n                    modalClosed={this.errorComfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n               </Modal>\r\n                    <WrappedComponent {...this.props}></WrappedComponent>\r\n                </Aux>\r\n            );\r\n        }        \r\n    }       \r\n}\r\n\r\nexport default withErrorHandler\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredients.module.css'\r\n\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() { \r\n        let ingredient = null;\r\n\r\n        switch(this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient  = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n\r\n            case ('meat'): \r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n\r\n            case ('cheese'):\r\n                ingredient= <div className={classes.Cheese}></div>;\r\n                break;\r\n\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            \r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            \r\n            default:    \r\n                ingredient = null;                \r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n};\r\n\r\n//require that the type of argument is a string\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\r\n\r\nconst burger = (props) => {\r\n    //convert the incoming object of key value pairs into an array taking into accaount the keys.\r\n    //returns an array of arrays\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {            \r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {                \r\n            return <BurgerIngredient key={igKey + i} type={igKey} />;           \r\n            });\r\n        }) \r\n    //flatten the array to have only one array of objects. instead of an array of arrays that each one holds objeacts.. in order to later check if theres no ingredients selected\r\n        .reduce((arr, el) => {                 \r\n            return arr.concat(el);\r\n        }, []);\r\n        if(transformedIngredients.length === 0) {\r\n            transformedIngredients = <p>Please add ingredients!</p>;\r\n        }\r\n    //console.log(transformedIngredients);\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}            \r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1SDTm\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__ShAeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__XCxGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__CfbJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__DH7Nq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__16MGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3Sb3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2dLMY\",\"load2\":\"Spinner_load2__1s7fv\"};","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css';\r\nconst Logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"Dylas's-Burger\"/>\r\n    </div>\r\n);\r\n\r\nexport default Logo\r\n","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst NavigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link} \r\n            exact\r\n            activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default NavigationItem\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationsItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n        {props.isAuthenticated \r\n             ? <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n             : null}\r\n        {!props.isAuthenticated \r\n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem> \r\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem> }\r\n    </ul>\r\n);\r\n\r\nexport default NavigationsItems\r\n\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst DrawerToggle = (props) => {\r\n    return (\r\n        <div \r\n            className={classes.DrawerToggle}\r\n            onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrawerToggle;\r\n","import React from 'react'\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationsItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.DrawerToggleClicked} />        \r\n        <div className={classes.Logo}> \r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DekstopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default Toolbar\r\n","import React from 'react';\r\n\r\nimport NavigationsItems from '../NavigationItems/NavigationsItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport classes from './SideDrawer.module.css';\r\nimport Aux from '../../../hoc/Auxilary/Auxilary';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\n\r\n\r\nconst SideDrawer = (props) => {\r\n    let attachClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationsItems isAuthenticated={props.isAuth} />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    )\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, {Component} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport Aux from '../Auxilary/Auxilary';\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../Components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../Components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    SideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    toggleSideDrawerHandler = () => {        \r\n        this.setState( (prevState) =>  {\r\n            return { showSideDrawer: !prevState.showSideDrawer}\r\n        });          \r\n    }    \r\n\r\n    render() {\r\n        return ( \r\n            <Aux>\r\n                <Toolbar \r\n                    isAuth={this.props.isAuthenticated}\r\n                    DrawerToggleClicked={this.toggleSideDrawerHandler} />\r\n                <SideDrawer \r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer} closed={this.SideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n             </Aux> \r\n        )\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state =>  {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => (\r\n   <div className={classes.BuildControl}>\r\n       <div className={classes.Label}>{props.label}</div>\r\n       <button \r\n         className={classes.Lesss} \r\n         onClick={props.removed} \r\n         disabled={props.disabled}>Less\r\n      </button>\r\n      <button \r\n         className={classes.More} \r\n         onClick={props.added}>More</button>\r\n   </div> \r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst buildControls = props => \r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>${props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl =>        \r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientsRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}\r\n            />\r\n        )}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchaseable}\r\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN IN TO ORDER'}</button>  \r\n     </div>\r\n\r\n\r\nexport default buildControls;","import React, {Component} from 'react'\r\n\r\nimport Aux  from \"../../../hoc/Auxilary/Auxilary\";\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSumary  extends Component {\r\n  //this could be a functional component, does not need to be a class component. but for debbuging purpuses is left like this\r\n  // componentDidUpdate () {\r\n  //   console.log('[OrderSummary] did update');\r\n  // }\r\n  render() {\r\n    const ingredientSummary = Object.keys(this.props.ingredients)\r\n      .map(igKey => {\r\n          return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n            </li>\r\n          )\r\n      });\r\n\r\n    return(\r\n       <Aux>\r\n          <h3>Your Order</h3>\r\n          <p>A delicious burger with the following ingredients</p>\r\n          <ul>\r\n            {ingredientSummary}\r\n          </ul>\r\n          <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n          <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n      </Aux>)\r\n  }\r\n};\r\n\r\nexport default OrderSumary;\r\n","import React, {Component} from 'react';\r\n\r\nimport Aux from '../../hoc/Auxilary/Auxilary';\r\nimport Burger from '../../Components/Burger/Burger';\r\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\r\nimport Modal  from '../../Components/UI/Modal/Modal';\r\nimport axios from '../../axios-orders';\r\nimport OrderSummary from \"../../Components/Burger/OrderSummary/OrderSumary\";\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport * as actions from  '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nexport class BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state ={...}\r\n    // }\r\n    state = {\r\n        purchasing: false       \r\n    };\r\n    //fetch ingredients from database\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n        .map(igKey => {\r\n            return ingredients[igKey];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        return sum > 0;\r\n    };\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({purchasing: true});\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    };\r\n\r\n    purchaseCancelHandler = ()=>  {\r\n        this.setState({purchasing: false});\r\n    };\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchased();\r\n        this.props.history.push('/checkout');\r\n    };\r\n\r\n    render() {\r\n        const  disableInfo ={\r\n            ...this.props.ings\r\n        };\r\n\r\n        for (let key in disableInfo) {\r\n            //returns true or false {salad: true, meat: false}\r\n            disableInfo[key] = disableInfo[key] <= 0;\r\n        };\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner /> ;\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientsRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disableInfo}\r\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        price={this.props.price}\r\n                    />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n            />\r\n        };\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                   {orderSummary}\r\n                </Modal>\r\n               {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated : state.auth.token !== null\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchased: () => dispatch(actions.purchasedInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\n class Logout extends Component {\r\n     componentDidMount () {\r\n         this.props.onLogout();\r\n     }\r\n    render() {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, {Component} from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component{\r\n        state = {\r\n            Component: null\r\n        }\r\n\r\n        componentDidMount () {\r\n            importComponent ()\r\n                .then(cmp => {\r\n                    this.setState({component: cmp.default});\r\n                });\r\n        }\r\n\r\n        render () {\r\n            const C = this.state.component;\r\n            \r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React, {Component} from 'react';\r\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\r\nimport Logout from './containers/Auth/Logout/Logout';\r\nimport * as actions from './store/actions/index'\r\nimport asyncComponent from './hoc/asyncComponent/asyncComponents';\r\n\r\n//lazy loading\r\nconst asyncCheckout = asyncComponent(() => {\r\n  return import('./containers/Checkout/Checkout');\r\n});\r\n\r\nconst asyncOrders = asyncComponent(() => {\r\n  return import('./containers/Orders/Orders');\r\n});\r\n\r\nconst asyncAuth = asyncComponent(() => {\r\n  return import('./containers/Auth/Auth');\r\n});\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignIn();   \r\n\r\n  }; \r\n  \r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={asyncAuth} />\r\n        <Route path=\"/\" exact component={BurgerBuilder} />      \r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n\r\n    if(this.props.isAuthenticated) {\r\n      routes =(\r\n        <Switch>\r\n          <Route path=\"/Checkout\" component={asyncCheckout} />\r\n          <Route path=\"/orders\" component={asyncOrders} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/auth\" component={asyncAuth} />\r\n          <Route path=\"/\" exact component={BurgerBuilder} /> \r\n          <Redirect to=\"/\" /> \r\n        </Switch>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Switch>\r\n          {routes}\r\n\r\n          </Switch>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignIn: () => dispatch(actions.authCheckState())\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: .5,\r\n    cheese: .4,\r\n    meat: 1.3,\r\n    bacon: .7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {\r\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n    };\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n            ingredients: updatedIngredients,\r\n            totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n            building: true\r\n    };\r\n     return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = {\r\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n    };\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat,\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, { error: true })\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state, action);\r\n\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredient(state, action);\r\n\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredients(state, action) ;              \r\n\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: \r\n            return fetchIngredientsFailed(state, action);                 \r\n\r\n        default:\r\n            return state;\r\n     }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId })\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        //concat returns a new objects as well\r\n        orders: state.orders.concat(newOrder)\r\n    });                 \r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false });           \r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true });           \r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, { orders: action.orders, loading: false });           \r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, { loading: false });           \r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state, action);\r\n            \r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return purchaseBurgerStart(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purchaseBurgerSuccess(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return purchaseBurgerFail(state, action);\r\n        \r\n        case actionTypes.FETCH_ORDERS_START: \r\n            return fetchOrdersStart(state, action)\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return fetchOrdersSuccess(state, action)\r\n        \r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrdersFail(state, action)\r\n\r\n        default:\r\n            return state;\r\n        };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n     return  updateObject(state, {error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return  updateObject(state, {\r\n        token: action.idToken ,\r\n        userId: action.userId, \r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, { error: action.error, loading: false });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {token: null, userId: null});\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action);\r\n\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action); \r\n\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action);   \r\n\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath(state, action);                   \r\n    \r\n        default: \r\n            return state;            \r\n    }\r\n\r\n    \r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancers = process.env.NODE_ENV ==='development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    order: orderReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}